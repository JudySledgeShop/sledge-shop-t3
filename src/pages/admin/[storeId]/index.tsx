import type { GetServerSidePropsContext, GetStaticPropsContext } from "next";
import { getSession, signIn, signOut, useSession } from "next-auth/react";
import Head from "next/head";

import { CreditCard, DollarSign, Package } from "lucide-react";
import { getServerAuthSession } from "~/server/auth";
import { prisma } from "~/server/db";

import { useParams } from "next/navigation";
import { useRouter } from "next/router";
import { getGraphRevenue } from "~/actions/get-graph-revenue";
import { getSalesCount } from "~/actions/get-sales-count";
import { getStockCount } from "~/actions/get-stock-count";
import { getTotalRevenue } from "~/actions/get-total-revenue";
import Navbar from "~/components/admin/navbar";
import { Overview } from "~/components/admin/overview";
import { Card, CardContent, CardHeader, CardTitle } from "~/components/ui/card";
import { Heading } from "~/components/ui/heading";
import { Separator } from "~/components/ui/separator";
import { formatter } from "~/utils/styles";

export const getServerSideProps = async (ctx: GetServerSidePropsContext) => {
  const storeId = ctx.params?.storeId.toString();
  const totalRevenue = await getTotalRevenue(storeId);
  const graphRevenue = await getGraphRevenue(storeId);
  const salesCount = await getSalesCount(storeId);
  const stockCount = await getStockCount(storeId);

  const session = await getServerAuthSession(ctx);

  if (!session) {
    console.log("no session");
  }

  const store = await prisma.store.findFirst({
    where: {
      id: storeId,
      userId: session?.user.id,
    },
  });

  if (!store)
    return {
      redirect: {
        destination: "/admin",
      },
    };

  return {
    props: {
      totalRevenue,
      graphRevenue,
      salesCount,
      stockCount,
      params: {
        storeId,
      },
    },
  };
};

interface DashboardPageProps {
  totalRevenue: number;
  graphRevenue: any; // define proper type
  salesCount: number;
  stockCount: number;
  params: {
    storeId: string;
  };
}

const DashboardPage = ({
  totalRevenue,
  graphRevenue,
  salesCount,
  stockCount,
}: DashboardPageProps) => {
  return (
    <>
      <Head>
        <title>Store Dashboard</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Navbar />
      <main className="flex-col">
        <div className="flex-1 space-y-4 p-8 pt-6">
          <Heading title="Dashboard" description="Overview of your store" />
          <Separator />
          <div className="grid grid-cols-3 gap-4">
            <Card>
              <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
                <CardTitle className="text-sm font-medium">
                  Total Revenue
                </CardTitle>
                <DollarSign className="h-4 w-4 text-muted-foreground" />
              </CardHeader>
              <CardContent>
                <div className="text-2xl font-bold">
                  {formatter.format(totalRevenue)}
                </div>
              </CardContent>
            </Card>
            <Card>
              <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
                <CardTitle className="text-sm font-medium">Sales</CardTitle>
                <CreditCard className="h-4 w-4 text-muted-foreground" />
              </CardHeader>
              <CardContent>
                <div className="text-2xl font-bold">+{salesCount}</div>
              </CardContent>
            </Card>
            <Card>
              <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
                <CardTitle className="text-sm font-medium">
                  Products In Stock
                </CardTitle>
                <Package className="h-4 w-4 text-muted-foreground" />
              </CardHeader>
              <CardContent>
                <div className="text-2xl font-bold">{stockCount}</div>
              </CardContent>
            </Card>
          </div>
          <Card className="col-span-4">
            <CardHeader>
              <CardTitle>Overview</CardTitle>
            </CardHeader>
            <CardContent className="pl-2">
              <Overview data={graphRevenue} />
            </CardContent>
          </Card>
        </div>
      </main>
    </>
  );
};

export default DashboardPage;
